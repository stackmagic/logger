plugins {
	id 'java'
	id 'maven'
	id 'groovy'
	id 'jacoco'
	id 'signing'
	id 'project-report'
}

description = 'Wrapper for slf4j Logger that uses format strings'
group       = 'net.swisstech'
version     = '2.0.1'

/*
 * REPOSITORIES
 */
repositories {
	mavenLocal()
	mavenCentral()
}

/*
 * DEPENDENCIES
 */
ext.versions = [
	     slf4j : '1.8.0-beta4'
	  , testng : '7.4.0'
]

dependencies {
	implementation     "org.slf4j:slf4j-api:${versions.slf4j}"

	testImplementation "org.slf4j:slf4j-simple:${versions.slf4j}"
	testImplementation "org.testng:testng:${versions.testng}"
}

/*
 * generate the logger class by calling the python generator script
 */
task generateLogger(type: Exec) {

	// implementationJava depends on 'this' task
	tasks.compileJava.dependsOn name

	// where to put the generated sources
	ext.destinationDir = "${buildDir}/generated-sources/generate-logger"

	// configure task to generate the logger code
	commandLine = [ 'python', 'src/main/python/generate_logger.py', ext.destinationDir ]

	// only regenerate when the source file has changed
	inputs.dir( new File("${buildDir}/../src/main/python"))
	outputs.dir(new File("${ext.destinationDir}"))
}

// make sure the generated code is available to the implementationr
sourceSets.main.java.srcDirs += generateLogger.destinationDir

/*
 * UNIT TESTING
 */
jacoco {
	toolVersion = "0.8.6"
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

test {
	useTestNG()
	testLogging.showStandardStreams = true
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
}

tasks.check.dependsOn jacocoTestReport

/*
 * WRAPPER
 */
wrapper {
	gradleVersion = '6.8'
}

/*
 * PACKAGING & PUBLISHING
 */
task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}

signing {
	sign configurations.archives
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			pom.project {
				name project.name
				packaging 'jar'
				description project.description
				url "https://github.com/stackmagic/${project.name}"

				scm {
					connection "scm:git:ssh://git@github.com:stackmagic/${project.name}.git"
					developerConnection "scm:git:ssh://git@github.com:stackmagic/${project.name}.git"
					url "https://github.com/stackmagic/${project.name}.git"
				}

				licenses {
					license {
						name 'The Apache License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}

				developers {
					developer {
						id 'stackmagic'
						name 'Patrick Huber'
						email 'stackmagic@gmail.com'
					}
				}
			}
		}
	}
}
